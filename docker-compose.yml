version: '3'

volumes:
  vhost:
  html:

services:
  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy
    restart: always
    volumes:
      - ./data/public:/app/public
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./config/nginx.conf:/etc/nginx/vhost.d/default
      - ./data/vhost:/etc/nginx/vhost.d
      - ./data/html:/usr/share/nginx/html
      - ./data/certs:/etc/nginx/certs:ro
    ports: 
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"

  letsencrypt:
    container_name: letsencrypt
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
      NGINX_DOCKER_GEN_CONTAINER: nginx-proxy
    volumes:
      - ./data/vhost:/etc/nginx/vhost.d
      - ./data/public:/usr/share/nginx/html
      - ./data/certs:/etc/nginx/certs
      - ./data/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nginx-proxy

  app:
    image: intercity/intercity_next
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
    env_file:
      - intercity.env
    environment:
      - REDIS_URL=redis://redis:6379/0
      - VIRTUAL_ROOT=/app/public
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
    depends_on:
      - db
      - redis

  redis:
    image: redis
    volumes:
      - ./data/redis:/data
    hostname: redis
    
  db:
    image: postgres
    volumes: 
      - ./data/postgres:/var/lib/postgresql/data

